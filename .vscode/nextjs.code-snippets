{
  // Place your nextjs-clue-assign workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create new page": {
    "scope": "typescriptreact",
    "prefix": "nj:page",
    "body": [
      "// https://nextjs.org/docs/app/api-reference/file-conventions/page",
      "export default async function Page(info: { ",
      "  params: { slug: string }; ",
      "  searchParams: { ",
      "    [key: string]: string | string[] | undefined; ",
      "  }; ",
      "}) { ",
      "  return ( ",
      "    <div> ",
      "      <div>{JSON.stringify(info)}</div> ",
      "    </div> ",
      "  ); ",
      "} ",
      " ",
      "/** ",
      " * https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config ",
      " */ ",
      " ",
      "export const dynamic : 'auto' | 'force-dynamic' | 'error' | 'force-static'  = \"auto\"; ",
      "export const dynamicParams : boolean = true; ",
      "export const revalidate : false | 0 | number = false; ",
    ],
    "description": "创建 nextjs 页面",
  },
  "Create route": {
    "scope": "typescript",
    "prefix": "nj:route",
    "body": [
      "import { NextRequest } from \"next/server\"; ",
      " ",
      "// https://nextjs.org/docs/app/api-reference/file-conventions/route",
      "// export async function GET(request: NextRequest, context: { params: unknown }) { return Response.json({}); } ",
      " ",
      "// export async function HEAD(request: NextRequest) { } ",
      " ",
      "// export async function POST(request: NextRequest) { } ",
      " ",
      "// export async function PUT(request: NextRequest) { } ",
      " ",
      "// export async function DELETE(request: NextRequest) { } ",
      " ",
      "// export async function PATCH(request: NextRequest) { } ",
      " ",
      "// If `OPTIONS` is not defined, Next.js will automatically implement `OPTIONS` and  set the appropriate Response `Allow` header depending on the other methods defined in the route handler. ",
      "export async function OPTIONS(request: NextRequest) { } ",
      " ",
      "export const dynamic : 'auto' | 'force-dynamic' | 'error' | 'force-static' = \"auto\"; ",
    ],
    "description": "创建接口",
  },
}
